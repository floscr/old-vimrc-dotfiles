#    -*- mode: org -*-


Archived entries from file /Users/flo_air/.homesick/repos/dotfiles/home/.config/doom/config.org


* CANCELLED Use native indexing
:PROPERTIES:
:ARCHIVE_TIME: 2019-01-07 Mon 20:14
:ARCHIVE_FILE: ~/.homesick/repos/dotfiles/home/.config/doom/config.org
:ARCHIVE_OLPATH: Config/Packages & Modules/Helm
:ARCHIVE_CATEGORY: config
:ARCHIVE_TODO: CANCELLED
:END:

Otherwise the ~.projectile~ files wont accept extensions for ignoring.
This is very slow on dotfiles repo in osx.

#+BEGIN_SRC elisp :tangle no
(after!
  helm-projectile
  :config
  (setq projectile-indexing-method 'native))
#+END_SRC

* DONE Disable the flycheck popup during insert mode
:PROPERTIES:
:ARCHIVE_TIME: 2019-03-13 Wed 10:28
:ARCHIVE_FILE: ~/.homesick/repos/Dotfiles/home/.config/doom/config.org
:ARCHIVE_OLPATH: Configuration/Packages & Modules/Flycheck
:ARCHIVE_CATEGORY: config
:ARCHIVE_TODO: DONE
:END:

#+BEGIN_SRC elisp :tangle no
(setq-hook! 'evil-insert-state-entry-hook flycheck-display-errors-function #'noop)
(setq-hook! 'evil-insert-state-exit-hook flycheck-display-errors-function #'syntax-checker-show-popup)
#+END_SRC

* DONE Delete current Buffer File
:PROPERTIES:
:ARCHIVE_TIME: 2019-04-01 Mon 13:22
:ARCHIVE_FILE: ~/.homesick/repos/Dotfiles/home/.config/doom/config.org
:ARCHIVE_OLPATH: Configuration/Utilities
:ARCHIVE_CATEGORY: config
:ARCHIVE_TODO: DONE
:END:
#+BEGIN_SRC elisp
(defun floscr/delete-current-buffer-file ()
  "Removes file connected to current buffer and kills buffer."
  (interactive)
  (let ((filename (buffer-file-name))
        (buffer (current-buffer))
        (name (buffer-name)))
    (if (not (and filename (file-exists-p filename)))
        (ido-kill-buffer)
      (when (yes-or-no-p "Are you sure you want to delete this file? ")
        (delete-file filename t)
        (kill-buffer buffer)
        (when (and (configuration-layer/package-usedp 'projectile)
                   (projectile-project-p))
          (call-interactively #'projectile-invalidate-cache))
        (message "File '%s' successfully removed" filename)))))
#+END_SRC

* DONE Sort Lines
:PROPERTIES:
:ARCHIVE_TIME: 2019-04-01 Mon 14:30
:ARCHIVE_FILE: ~/.homesick/repos/Dotfiles/home/.config/doom/config.org
:ARCHIVE_OLPATH: Configuration/Bindings/Evil Normal Bindings
:ARCHIVE_CATEGORY: config
:ARCHIVE_TODO: DONE
:END:
#+BEGIN_SRC elisp
(after! evil
  (define-key evil-visual-state-map (kbd "gS") #'evil-ex-sort))
#+END_SRC

* DONE Use ag as default grep search
:PROPERTIES:
:ARCHIVE_TIME: 2019-04-01 Mon 15:21
:ARCHIVE_FILE: ~/.homesick/repos/Dotfiles/home/.config/doom/config.org
:ARCHIVE_OLPATH: Configuration/Packages & Modules/Helm
:ARCHIVE_CATEGORY: config
:ARCHIVE_TODO: DONE
:END:

#+BEGIN_SRC elisp
(defun projectile-switch-project-and-do-ag (project)
  "Switch to a project and do a search"
  (let ((projectile-switch-project-action 'helm-projectile-ag))
    (projectile-switch-project-by-name project)))

(after!
  helm-projectile
  :init
  (helm-projectile-define-key helm-projectile-projects-map (kbd "C-/") 'projectile-switch-project-and-do-ag))

#+END_SRC

* DONE Helm Terminal History C-R
:PROPERTIES:
:ARCHIVE_TIME: 2019-04-01 Mon 15:21
:ARCHIVE_FILE: ~/.homesick/repos/Dotfiles/home/.config/doom/config.org
:ARCHIVE_OLPATH: Configuration/Packages & Modules/Helm
:ARCHIVE_CATEGORY: config
:ARCHIVE_TODO: DONE
:END:
#+BEGIN_SRC elisp :tangle no
(defun ar/helm-helm (title candidates on-select-function)
  "Helm with TITLE CANDIDATES and ON-SELECT-FUNCTION."
  )

(defun ar/shell-send-command (command)
  "Send COMMAND to shell mode."
  ;; (assert (string-equal mode-name "Shell") nil "Not in Shell mode")
  (goto-char (point-max))
  (comint-kill-input)
  (insert command)
  (comint-send-input))

(defun split-up-to-semi-colon (s)
  "Splits a string up to the first semi-colon"
  (last (s-split-up-to ";" s 1)))

(defun opt (x y)
  "Helper function - When x is non-nil use x otherwise use y"
  (if x x y))

(defun parse-zsh-history (&optional file)
  "Read the zsh_history and parse the commands"
  (with-temp-buffer
    (insert-file-contents (opt file "~/.zsh_history") nil 0 500)
    (mapcar 'split-up-to-semi-colon
          (delete-dups
            (split-string (buffer-string) "\n")))))

(defvar +helm|zsh-history
  '((name . "Zsh History")
    (candidates-process . (lambda)))
  )

(defun +helm|zsh-history ()
  "Narrow down bash history with helm."
  (interactive)
  (helm :sources +helm|zsh-history
        :prompt  "shell command: "
        :buffer  "*helm shell history*"))

(bind-key "s-r" #'ar/helm-shell-search-history shell-mode-map)

;; Save buffer name
;; Close minibuffer
;; Switch to bufffer

#+END_SRC

* DONE Helm
:PROPERTIES:
:ARCHIVE_TIME: 2019-04-01 Mon 15:21
:ARCHIVE_FILE: ~/.homesick/repos/Dotfiles/home/.config/doom/config.org
:ARCHIVE_OLPATH: Configuration/Packages & Modules
:ARCHIVE_CATEGORY: config
:ARCHIVE_TODO: DONE
:END:
