# Tmux Default Prefix
# Unbind the default prefix and bind it to
# <c-q>
unbind C-b
set -g prefix C-q
# bind C-a send-prefix
# # for nested tmux sessions
# bind-key a send-prefix

# Tmux Bookmark Shortcuts
# Quickly switch to names sessions
bind F5 switch-client -t notes

# cycle through panes
bind ^q select-pane -t:.+

# Switch to last Window
bind W last-window

# bind fast session switching
unbind S
bind S command-prompt "switch -t %1"

# Create a new window in the same path as the current window
bind c new-window -c "#{pane_current_path}"

# Enter VI copy mode on ESC
bind Escape copy-mode

# Close all other panes
# Do nothing when only a single tmux pane is available
# Otherwiste this command would close the whole session
unbind o
is_single_window="tmux list-panes | wc -l | grep -v -q 1"
bind-key o if-shell "$is_single_window" "kill-pane -a" ""

# Move the pane down
bind ^J swap-pane -D

# tile all windows
unbind =
bind = select-layout tiled

# reload config file
bind r source-file ~/.tmux.conf \; display "Config Reloaded!"

# quickly open a new window
bind N new-window
bind p previous-window

# split window and fix path for tmux 1.9
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# synchronize all panes in a window
bind y setw synchronize-panes

# Clear window / panel fix for iTerm
unbind C-^
bind-key C-^ send-keys -R \; clear


# Pane movement shortcuts
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# bind -r C-h select-window -t :-
# bind -r C-l select-window -t :+

# Resize pane shortcuts
bind -r H resize-pane -L 10
bind -r J resize-pane -D 10
bind -r K resize-pane -U 10
bind -r L resize-pane -R 10

# maximizing and restoring windows
unbind Up
bind Up new-window -d -n fullscreen \; swap-pane -s fullscreen.1 \; select-window -t fullscreen
unbind Down
bind Down last-window \; swap-pane -s fullscreen.1 \; kill-window -t fullscreen

# Kill pane
bind-key x kill-pane

# Kill all panes except the current one
bind-key T kill-pane -a

# more settings to make copy-mode more vim-like
unbind [
bind Escape copy-mode
# unbind p
# bind p paste-buffer
# bind -t vi-copy 'v' begin-selection
# bind -t vi-copy 'y' copy-selection
bind-key -Tcopy-mode-vi 'v' send -X begin-selection
bind-key -Tcopy-mode-vi 'y' send -X copy-selection

# Buffers to/from Mac clipboard, yay tmux book from pragprog
bind C-c run "tmux save-buffer - | reattach-to-user-namespace pbcopy"
bind C-v run "tmux set-buffer $(reattach-to-user-namespace pbpaste); tmux paste-buffer")

# Search back to last prompt (mnemonic: "[b]ack");
# Searches for the prompt arrow
bind-key b copy-mode\; send-keys -X start-of-line\; send-keys -X search-backward "‚ùØ"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind C-l send-keys 'C-l'
bind l send-keys 'C-l'
